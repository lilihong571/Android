{
  "employees":[
    {"id":1,"firstName":"John","lastName":"Doe"},
    {"id":2,"firstName":"Anna","lastName":"Smith"},
    {"id":3,"firstName":"Peter","lastName":"Jones"}
  ],
  "cat":"it"
}
//键是永远使用字符串来表示的
//值可以是字符串，也可以数字


//JSON:javaScript对象表示法（JavaScript Object Notation）
//JSON是存储和交换文本信息的语法
//JSON是轻量级文本数据交换方式
//JSON独立于语言和平台
//JSON具有自我描述性，更易理解

/*
类似XML，比XML更小，更快，更易解析
1.没有结束标签
2.更短
3.读写速度更快
4.使用数组
5.不使用保留字

JSON语法是JavaScript对象表示法语法的子集
1.数据在名称/值对中（键值对）
2.数据由逗号分隔
3.花括号保存对象
4.方括号保存数组

JSON值可以是
1.数字（整数或浮点数）
2.字符串（在双引号中）
3.逻辑值（true或false）
4.数组（在方括号中）
5.对象（在花括号中）
6.null
*/

/*
JSON对象在花括号中书写，对象可以包含多个名称/值对：
花括号保存对象
数据在键值对中，字符串（在双引号中）


{"firstName":"John","lastName":"Doe"}
前后的花括号表示这是一个对象，
其中JSON的键值对使用引号来表示
firstName表示当前对应的键，或者是当前的名称
John就是当中的值
使用逗号来分隔下一个值


JSON数组在方括号中书写，数组可包含多个对象
{
    "employees":[
      {"firstName":"John","lastName":"Doe"},
      {"firstName":"Anna","lastName":"Smith"},
      {"firstName":"Peter","lastName":"Jones"}
    ]
}
//根部的花括号表示这是一个整体的JSON数据
"employees"表示一个键，
这个键对应的值是一个JSON的数组，
数组中包含了3个JSON对象，
每个对象又包含了firstName和lastName这样一个值，
并且每个对象也是通过逗号分隔开的


也就是说
对象中的每一个值通过逗号分隔开
数组中的每一个值通过对象分隔开
*/























